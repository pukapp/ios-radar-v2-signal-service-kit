//
//  Copyright (c) 2019 Open Whisper Systems. All rights reserved.
//

#import "SignalAccount.h"
#import "Contact.h"
#import "NSString+SSK.h"
#import "OWSPrimaryStorage.h"
#import "SignalRecipient.h"
#import <ContactsUI/ContactsUI.h>
#import "TSThread.h"

NS_ASSUME_NONNULL_BEGIN

@interface SignalAccount ()

@property (nonatomic) NSString *recipientId;

@end

#pragma mark -

@implementation SignalAccount

- (instancetype)initWithSignalRecipient:(SignalRecipient *)signalRecipient
{
    OWSAssertDebug(signalRecipient);
    return [self initWithRecipientId:signalRecipient.recipientId];
}

- (instancetype)initWithRecipientId:(NSString *)recipientId
{
    if (self = [super init]) {
        OWSAssertDebug(recipientId.length > 0);

        _recipientId = recipientId;
    }
    return self;
}

+ (SignalAccount *)makeRobotAccount
{
    CNMutableContact *cnContact = [CNMutableContact new];
    [cnContact setGivenName:@"AAAAA机器人"];
    Contact *contact = [[Contact alloc] initWithSystemContact:cnContact];
    return [[SignalAccount alloc] initWithUniqueId:OWSRobotThreadContactIdentifier
                                           contact:contact
                         hasMultipleAccountContact:NO
                          multipleAccountLabelText:@"Robot"
                                       recipientId:OWSRobotThreadContactIdentifier];
}

+ (SignalAccount *)makeWalletAccount
{
    CNMutableContact *cnContact = [CNMutableContact new];
    [cnContact setGivenName:@"AAAAA我的钱包"];
    Contact *contact = [[Contact alloc] initWithSystemContact:cnContact];
    return [[SignalAccount alloc] initWithUniqueId:OWSWalletThreadContactIdentifier
                                           contact:contact
                         hasMultipleAccountContact:NO
                          multipleAccountLabelText:@"Wallet"
                                       recipientId:OWSWalletThreadContactIdentifier];
}

+ (SignalAccount *)makeTradeAccount
{
    CNMutableContact *cnContact = [CNMutableContact new];
    [cnContact setGivenName:@"AAAAA交易所"];
    Contact *contact = [[Contact alloc] initWithSystemContact:cnContact];
    return [[SignalAccount alloc] initWithUniqueId:OWSTradeThreadContactIdentifier
                                           contact:contact
                         hasMultipleAccountContact:NO
                          multipleAccountLabelText:@"Trade"
                                       recipientId:OWSTradeThreadContactIdentifier];
}

+ (SignalAccount *)makeMallAccount
{
    CNMutableContact *cnContact = [CNMutableContact new];
    [cnContact setGivenName:@"AAAAA商城"];
    Contact *contact = [[Contact alloc] initWithSystemContact:cnContact];
    return [[SignalAccount alloc] initWithUniqueId:OWSMallThreadContactIdentifier
                                           contact:contact
                         hasMultipleAccountContact:NO
                          multipleAccountLabelText:@"Mall"
                                       recipientId:OWSMallThreadContactIdentifier];
}



- (BOOL)isRobot
{
    OWSAssertDebug(self.recipientId);
    return [self.recipientId isEqualToString:OWSRobotThreadContactIdentifier];
}

- (BOOL)isWallet
{
    OWSAssertDebug(self.recipientId);
    return [self.recipientId isEqualToString:OWSWalletThreadContactIdentifier];
}

- (BOOL)isTrade
{
    OWSAssertDebug(self.recipientId);
    return [self.recipientId isEqualToString:OWSTradeThreadContactIdentifier];
}

- (BOOL)isMall
{
    OWSAssertDebug(self.recipientId);
    return [self.recipientId isEqualToString:OWSMallThreadContactIdentifier];
}

// --- CODE GENERATION MARKER

// This snippet is generated by /Scripts/sds_codegen/sds_generate.py. Do not manually edit it, instead run
// `sds_codegen.sh`.

// clang-format off

- (instancetype)initWithUniqueId:(NSString *)uniqueId
                         contact:(nullable Contact *)contact
       hasMultipleAccountContact:(BOOL)hasMultipleAccountContact
        multipleAccountLabelText:(NSString *)multipleAccountLabelText
                     recipientId:(NSString *)recipientId
{
    self = [super initWithUniqueId:uniqueId];

    if (!self) {
        return self;
    }

    _contact = contact;
    _hasMultipleAccountContact = hasMultipleAccountContact;
    _multipleAccountLabelText = multipleAccountLabelText;
    _recipientId = recipientId;

    return self;
}

// clang-format on

// --- CODE GENERATION MARKER

- (nullable NSString *)uniqueId
{
    return _recipientId;
}

- (nullable NSString *)contactFullName
{
    return self.contact.fullName.filterStringForDisplay;
}

- (NSString *)multipleAccountLabelText
{
    return _multipleAccountLabelText.filterStringForDisplay;
}

@end

NS_ASSUME_NONNULL_END
